
from z3 import *
from cassMain import *

#begin methods
	
set_option(max_depth=1000, max_args=9000, max_lines = 1000, max_width=1000, max_indent=1000)

def binarySrch(imin, imax):
	if imin == imax:
		fb = FreshBool()
		wt = Implies(fb,getGoal() == imin)
		s.add(wt)
		s.check(DC+IC+[fb])
		m = s.model()
		print "Otimized to:%s "%imin;
		print printResult(m)
		return;
	else:
		imid = (imin + imax) / 2
		
		fb = FreshBool()
		wt = Implies(fb,getGoal() <= imid)
		s.add(wt)
		
	if s.check(DC+IC+[fb]) == sat:
		return binarySrch(imin, imid)
	else:
		return binarySrch(imid+1, imax)
	
#returns an optimized solution
def getOptimizedSolution(s, total):
	m = s.model()
	
	if is_true(total == 0):
		print printResult(m)
	else:
		print 'total = %s' % total
		
		fb = FreshBool()
		wt = Implies(fb,getGoal() < total)
		s.add(wt)
		
		if s.check(DC+IC+[fb]) == sat:
			binarySrch(0,total);
		else:
			print "Cannot further Optimize";
			print printResult(m)
def printResult(m):
	result = 'Results:\n'
	result += 'D1 -> ['
	result += getResultforDev(D1,m)
	result +=  ']\n'
	result += 'D2 -> ['
	result += getResultforDev(D2,m)
	result +=  ']\n'
	result += 'D3 -> ['
	result += getResultforDev(D3,m)
	result +=  ']\n'
	result += 'D4 -> ['
	result += getResultforDev(D4,m)
	result +=  ']\n'
	result += 'D5 -> ['
	result += getResultforDev(D5,m)
	result +=  ']\n'
	result += 'D6 -> ['
	result += getResultforDev(D6,m)
	result +=  ']\n'
	result += 'D7 -> ['
	result += getResultforDev(D7,m)
	result +=  ']\n'
	result += 'D8 -> ['
	result += getResultforDev(D8,m)
	result +=  ']\n'
	result += 'D9 -> ['
	result += getResultforDev(D9,m)
	result +=  ']\n'
	result += 'D10 -> ['
	result += getResultforDev(D10,m)
	result +=  ']\n'
	result += 'D11 -> ['
	result += getResultforDev(D11,m)
	result +=  ']\n'
	result += 'D12 -> ['
	result += getResultforDev(D12,m)
	result +=  ']\n'
	result += 'D13 -> ['
	result += getResultforDev(D13,m)
	result +=  ']\n'
	result += 'D14 -> ['
	result += getResultforDev(D14,m)
	result +=  ']\n'
	result += 'D15 -> ['
	result += getResultforDev(D15,m)
	result +=  ']\n'
	result += 'D16 -> ['
	result += getResultforDev(D16,m)
	result +=  ']\n'
	return result

def getGoal():
	return simplify( getGoalFor(D1) + getGoalFor(D2) + getGoalFor(D3) + getGoalFor(D4) + getGoalFor(D5) + getGoalFor(D6) + getGoalFor(D7) + getGoalFor(D8) + getGoalFor(D9) + getGoalFor(D10) + getGoalFor(D11) + getGoalFor(D12) + getGoalFor(D13) + getGoalFor(D14) + getGoalFor(D15) + getGoalFor(D16) )

def getDistance(m):
	total = 0;
	total = distance(D1, m)
	total = total + distance(D2, m)
	total = total + distance(D3, m)
	total = total + distance(D4, m)
	total = total + distance(D5, m)
	total = total + distance(D6, m)
	total = total + distance(D7, m)
	total = total + distance(D8, m)
	total = total + distance(D9, m)
	total = total + distance(D10, m)
	total = total + distance(D11, m)
	total = total + distance(D12, m)
	total = total + distance(D13, m)
	total = total + distance(D14, m)
	total = total + distance(D15, m)
	total = total + distance(D16, m)
	return total

###end method sections

#initialize the solver
s = getSolver()

##Developers Vectors
D1 = IntVector('D1', 9) 
D2 = IntVector('D2', 10) 
D3 = IntVector('D3', 10) 
D4 = IntVector('D4', 10) 
D5 = IntVector('D5', 9) 
D6 = IntVector('D6', 9) 
D7 = IntVector('D7', 9) 
D8 = IntVector('D8', 9) 
D9 = IntVector('D9', 10) 
D10 = IntVector('D10', 11) 
D11 = IntVector('D11', 9) 
D12 = IntVector('D12', 9) 
D13 = IntVector('D13', 9) 
D14 = IntVector('D14', 9) 
D15 = IntVector('D15', 11) 
D16 = IntVector('D16', 9) 

##Adding hard constraints
valueConst = [1 <= D1[0], D1[0] <= 9,1 <= D1[1], D1[1] <= 9,1 <= D1[2], D1[2] <= 9,1 <= D1[3], D1[3] <= 9,1 <= D1[4], D1[4] <= 9,1 <= D1[5], D1[5] <= 9,1 <= D1[6], D1[6] <= 9,1 <= D1[7], D1[7] <= 9,1 <= D1[8], D1[8] <= 9,\
		1 <= D2[0], D2[0] <= 10,1 <= D2[1], D2[1] <= 10,1 <= D2[2], D2[2] <= 10,1 <= D2[3], D2[3] <= 10,1 <= D2[4], D2[4] <= 10,1 <= D2[5], D2[5] <= 10,1 <= D2[6], D2[6] <= 10,1 <= D2[7], D2[7] <= 10,1 <= D2[8], D2[8] <= 10,1 <= D2[9], D2[9] <= 10,\
		1 <= D3[0], D3[0] <= 10,1 <= D3[1], D3[1] <= 10,1 <= D3[2], D3[2] <= 10,1 <= D3[3], D3[3] <= 10,1 <= D3[4], D3[4] <= 10,1 <= D3[5], D3[5] <= 10,1 <= D3[6], D3[6] <= 10,1 <= D3[7], D3[7] <= 10,1 <= D3[8], D3[8] <= 10,1 <= D3[9], D3[9] <= 10,\
		1 <= D4[0], D4[0] <= 10,1 <= D4[1], D4[1] <= 10,1 <= D4[2], D4[2] <= 10,1 <= D4[3], D4[3] <= 10,1 <= D4[4], D4[4] <= 10,1 <= D4[5], D4[5] <= 10,1 <= D4[6], D4[6] <= 10,1 <= D4[7], D4[7] <= 10,1 <= D4[8], D4[8] <= 10,1 <= D4[9], D4[9] <= 10,\
		1 <= D5[0], D5[0] <= 9,1 <= D5[1], D5[1] <= 9,1 <= D5[2], D5[2] <= 9,1 <= D5[3], D5[3] <= 9,1 <= D5[4], D5[4] <= 9,1 <= D5[5], D5[5] <= 9,1 <= D5[6], D5[6] <= 9,1 <= D5[7], D5[7] <= 9,1 <= D5[8], D5[8] <= 9,\
		1 <= D6[0], D6[0] <= 9,1 <= D6[1], D6[1] <= 9,1 <= D6[2], D6[2] <= 9,1 <= D6[3], D6[3] <= 9,1 <= D6[4], D6[4] <= 9,1 <= D6[5], D6[5] <= 9,1 <= D6[6], D6[6] <= 9,1 <= D6[7], D6[7] <= 9,1 <= D6[8], D6[8] <= 9,\
		1 <= D7[0], D7[0] <= 9,1 <= D7[1], D7[1] <= 9,1 <= D7[2], D7[2] <= 9,1 <= D7[3], D7[3] <= 9,1 <= D7[4], D7[4] <= 9,1 <= D7[5], D7[5] <= 9,1 <= D7[6], D7[6] <= 9,1 <= D7[7], D7[7] <= 9,1 <= D7[8], D7[8] <= 9,\
		1 <= D8[0], D8[0] <= 9,1 <= D8[1], D8[1] <= 9,1 <= D8[2], D8[2] <= 9,1 <= D8[3], D8[3] <= 9,1 <= D8[4], D8[4] <= 9,1 <= D8[5], D8[5] <= 9,1 <= D8[6], D8[6] <= 9,1 <= D8[7], D8[7] <= 9,1 <= D8[8], D8[8] <= 9,\
		1 <= D9[0], D9[0] <= 10,1 <= D9[1], D9[1] <= 10,1 <= D9[2], D9[2] <= 10,1 <= D9[3], D9[3] <= 10,1 <= D9[4], D9[4] <= 10,1 <= D9[5], D9[5] <= 10,1 <= D9[6], D9[6] <= 10,1 <= D9[7], D9[7] <= 10,1 <= D9[8], D9[8] <= 10,1 <= D9[9], D9[9] <= 10,\
		1 <= D10[0], D10[0] <= 11,1 <= D10[1], D10[1] <= 11,1 <= D10[2], D10[2] <= 11,1 <= D10[3], D10[3] <= 11,1 <= D10[4], D10[4] <= 11,1 <= D10[5], D10[5] <= 11,1 <= D10[6], D10[6] <= 11,1 <= D10[7], D10[7] <= 11,1 <= D10[8], D10[8] <= 11,1 <= D10[9], D10[9] <= 11,1 <= D10[10], D10[10] <= 11,\
		1 <= D11[0], D11[0] <= 9,1 <= D11[1], D11[1] <= 9,1 <= D11[2], D11[2] <= 9,1 <= D11[3], D11[3] <= 9,1 <= D11[4], D11[4] <= 9,1 <= D11[5], D11[5] <= 9,1 <= D11[6], D11[6] <= 9,1 <= D11[7], D11[7] <= 9,1 <= D11[8], D11[8] <= 9,\
		1 <= D12[0], D12[0] <= 9,1 <= D12[1], D12[1] <= 9,1 <= D12[2], D12[2] <= 9,1 <= D12[3], D12[3] <= 9,1 <= D12[4], D12[4] <= 9,1 <= D12[5], D12[5] <= 9,1 <= D12[6], D12[6] <= 9,1 <= D12[7], D12[7] <= 9,1 <= D12[8], D12[8] <= 9,\
		1 <= D13[0], D13[0] <= 9,1 <= D13[1], D13[1] <= 9,1 <= D13[2], D13[2] <= 9,1 <= D13[3], D13[3] <= 9,1 <= D13[4], D13[4] <= 9,1 <= D13[5], D13[5] <= 9,1 <= D13[6], D13[6] <= 9,1 <= D13[7], D13[7] <= 9,1 <= D13[8], D13[8] <= 9,\
		1 <= D14[0], D14[0] <= 9,1 <= D14[1], D14[1] <= 9,1 <= D14[2], D14[2] <= 9,1 <= D14[3], D14[3] <= 9,1 <= D14[4], D14[4] <= 9,1 <= D14[5], D14[5] <= 9,1 <= D14[6], D14[6] <= 9,1 <= D14[7], D14[7] <= 9,1 <= D14[8], D14[8] <= 9,\
		1 <= D15[0], D15[0] <= 11,1 <= D15[1], D15[1] <= 11,1 <= D15[2], D15[2] <= 11,1 <= D15[3], D15[3] <= 11,1 <= D15[4], D15[4] <= 11,1 <= D15[5], D15[5] <= 11,1 <= D15[6], D15[6] <= 11,1 <= D15[7], D15[7] <= 11,1 <= D15[8], D15[8] <= 11,1 <= D15[9], D15[9] <= 11,1 <= D15[10], D15[10] <= 11,\
		1 <= D16[0], D16[0] <= 9,1 <= D16[1], D16[1] <= 9,1 <= D16[2], D16[2] <= 9,1 <= D16[3], D16[3] <= 9,1 <= D16[4], D16[4] <= 9,1 <= D16[5], D16[5] <= 9,1 <= D16[6], D16[6] <= 9,1 <= D16[7], D16[7] <= 9,1 <= D16[8], D16[8] <= 9]

distConst = [Distinct(D1), Distinct(D2), Distinct(D3), Distinct(D4), Distinct(D5), Distinct(D6), Distinct(D7), Distinct(D8), Distinct(D9), Distinct(D10), Distinct(D11), Distinct(D12), Distinct(D13), Distinct(D14), Distinct(D15), Distinct(D16)]

##Add constraints to solver s
s.add(valueConst)
s.add(distConst)

##Adding soft constraints
##Adding boolean vector for DC
DC = BoolVector('DC', 82)
IC = BoolVector('IC', 761)

##Adding soft constraints as assertions
##Adding Direct Conflicts
s.add(Implies(DC[0], D11[8] != D13[1]))
s.add(Implies(DC[1], D8[7] != D9[8]))
s.add(Implies(DC[2], D7[1] != D12[1]))
s.add(Implies(DC[3], D10[6] != D12[7]))
s.add(Implies(DC[4], D5[6] != D16[1]))
s.add(Implies(DC[5], D6[7] != D8[4]))
s.add(Implies(DC[6], D6[7] != D8[1]))
s.add(Implies(DC[7], D2[1] != D14[2]))
s.add(Implies(DC[8], D7[3] != D8[8]))
s.add(Implies(DC[9], D3[7] != D8[4]))
s.add(Implies(DC[10], D7[8] != D11[3]))
s.add(Implies(DC[11], D2[8] != D3[8]))
s.add(Implies(DC[12], D6[4] != D11[3]))
s.add(Implies(DC[13], D10[8] != D12[6]))
s.add(Implies(DC[14], D1[2] != D15[0]))
s.add(Implies(DC[15], D3[3] != D4[6]))
s.add(Implies(DC[16], D2[8] != D16[7]))
s.add(Implies(DC[17], D6[2] != D11[0]))
s.add(Implies(DC[18], D11[0] != D14[2]))
s.add(Implies(DC[19], D2[4] != D4[6]))
s.add(Implies(DC[20], D4[2] != D5[4]))
s.add(Implies(DC[21], D14[6] != D16[2]))
s.add(Implies(DC[22], D1[2] != D12[2]))
s.add(Implies(DC[23], D1[6] != D13[7]))
s.add(Implies(DC[24], D5[2] != D8[3]))
s.add(Implies(DC[25], D3[5] != D8[6]))
s.add(Implies(DC[26], D1[5] != D2[2]))
s.add(Implies(DC[27], D11[5] != D12[1]))
s.add(Implies(DC[28], D2[7] != D4[1]))
s.add(Implies(DC[29], D12[5] != D14[7]))
s.add(Implies(DC[30], D1[5] != D5[0]))
s.add(Implies(DC[31], D3[6] != D8[0]))
s.add(Implies(DC[32], D9[3] != D13[1]))
s.add(Implies(DC[33], D5[2] != D6[0]))
s.add(Implies(DC[34], D2[0] != D4[6]))
s.add(Implies(DC[35], D8[7] != D13[6]))
s.add(Implies(DC[36], D8[7] != D9[7]))
s.add(Implies(DC[37], D11[0] != D12[8]))
s.add(Implies(DC[38], D11[3] != D15[2]))
s.add(Implies(DC[39], D4[0] != D16[4]))
s.add(Implies(DC[40], D12[1] != D16[6]))
s.add(Implies(DC[41], D4[6] != D8[7]))
s.add(Implies(DC[42], D12[2] != D13[5]))
s.add(Implies(DC[43], D7[8] != D9[2]))
s.add(Implies(DC[44], D10[8] != D14[3]))
s.add(Implies(DC[45], D9[1] != D13[5]))
s.add(Implies(DC[46], D2[7] != D3[1]))
s.add(Implies(DC[47], D1[3] != D16[8]))
s.add(Implies(DC[48], D2[5] != D4[4]))
s.add(Implies(DC[49], D10[0] != D11[0]))
s.add(Implies(DC[50], D12[4] != D13[4]))
s.add(Implies(DC[51], D1[0] != D5[3]))
s.add(Implies(DC[52], D12[4] != D14[0]))
s.add(Implies(DC[53], D5[4] != D6[0]))
s.add(Implies(DC[54], D14[8] != D15[2]))
s.add(Implies(DC[55], D6[6] != D11[8]))
s.add(Implies(DC[56], D11[2] != D12[8]))
s.add(Implies(DC[57], D4[4] != D8[0]))
s.add(Implies(DC[58], D1[0] != D5[6]))
s.add(Implies(DC[59], D14[7] != D15[3]))
s.add(Implies(DC[60], D5[8] != D8[4]))
s.add(Implies(DC[61], D5[0] != D6[1]))
s.add(Implies(DC[62], D11[7] != D12[4]))
s.add(Implies(DC[63], D9[3] != D11[3]))
s.add(Implies(DC[64], D10[10] != D12[8]))
s.add(Implies(DC[65], D9[4] != D11[5]))
s.add(Implies(DC[66], D3[0] != D5[1]))
s.add(Implies(DC[67], D2[7] != D9[9]))
s.add(Implies(DC[68], D11[6] != D12[5]))
s.add(Implies(DC[69], D6[7] != D10[4]))
s.add(Implies(DC[70], D7[1] != D10[4]))
s.add(Implies(DC[71], D12[0] != D14[5]))
s.add(Implies(DC[72], D12[6] != D13[2]))
s.add(Implies(DC[73], D5[8] != D9[2]))
s.add(Implies(DC[74], D8[2] != D12[0]))
s.add(Implies(DC[75], D1[1] != D12[6]))
s.add(Implies(DC[76], D1[8] != D5[1]))
s.add(Implies(DC[77], D14[7] != D15[6]))
s.add(Implies(DC[78], D1[2] != D4[6]))
s.add(Implies(DC[79], D9[3] != D14[1]))
s.add(Implies(DC[80], D13[3] != D14[7]))
s.add(Implies(DC[81], D11[7] != D15[7]))

##Adding InDirect Conflicts
s.add(Implies(IC[0], D3[5] > D15[3]))
s.add(Implies(IC[1], D11[6] > D15[5]))
s.add(Implies(IC[2], D7[6] > D10[6]))
s.add(Implies(IC[3], D9[8] > D13[4]))
s.add(Implies(IC[4], D1[7] > D13[8]))
s.add(Implies(IC[5], D9[3] > D13[8]))
s.add(Implies(IC[6], D1[3] > D2[0]))
s.add(Implies(IC[7], D1[6] > D16[7]))
s.add(Implies(IC[8], D6[1] > D8[8]))
s.add(Implies(IC[9], D9[9] > D11[5]))
s.add(Implies(IC[10], D11[6] > D12[7]))
s.add(Implies(IC[11], D4[7] > D5[8]))
s.add(Implies(IC[12], D8[4] > D9[4]))
s.add(Implies(IC[13], D10[6] > D12[7]))
s.add(Implies(IC[14], D6[4] > D7[0]))
s.add(Implies(IC[15], D1[6] > D16[3]))
s.add(Implies(IC[16], D4[8] > D9[3]))
s.add(Implies(IC[17], D7[3] > D12[4]))
s.add(Implies(IC[18], D4[7] > D9[5]))
s.add(Implies(IC[19], D1[6] > D5[5]))
s.add(Implies(IC[20], D9[5] > D11[4]))
s.add(Implies(IC[21], D15[7] > D16[8]))
s.add(Implies(IC[22], D5[8] > D9[2]))
s.add(Implies(IC[23], D4[9] > D13[6]))
s.add(Implies(IC[24], D1[6] > D2[3]))
s.add(Implies(IC[25], D11[1] > D15[7]))
s.add(Implies(IC[26], D3[3] > D15[2]))
s.add(Implies(IC[27], D2[4] > D6[7]))
s.add(Implies(IC[28], D8[3] > D11[0]))
s.add(Implies(IC[29], D1[7] > D3[0]))
s.add(Implies(IC[30], D5[5] > D7[5]))
s.add(Implies(IC[31], D11[0] > D13[4]))
s.add(Implies(IC[32], D2[6] > D3[5]))
s.add(Implies(IC[33], D9[5] > D13[1]))
s.add(Implies(IC[34], D14[5] > D15[3]))
s.add(Implies(IC[35], D3[7] > D14[2]))
s.add(Implies(IC[36], D15[8] > D16[2]))
s.add(Implies(IC[37], D8[2] > D12[2]))
s.add(Implies(IC[38], D7[6] > D10[5]))
s.add(Implies(IC[39], D7[0] > D8[1]))
s.add(Implies(IC[40], D4[8] > D5[4]))
s.add(Implies(IC[41], D6[2] > D9[0]))
s.add(Implies(IC[42], D12[5] > D15[9]))
s.add(Implies(IC[43], D10[2] > D14[7]))
s.add(Implies(IC[44], D9[4] > D10[7]))
s.add(Implies(IC[45], D11[8] > D15[4]))
s.add(Implies(IC[46], D13[8] > D16[2]))
s.add(Implies(IC[47], D3[6] > D5[6]))
s.add(Implies(IC[48], D8[5] > D9[9]))
s.add(Implies(IC[49], D3[0] > D8[6]))
s.add(Implies(IC[50], D7[5] > D11[1]))
s.add(Implies(IC[51], D1[0] > D4[8]))
s.add(Implies(IC[52], D11[0] > D15[1]))
s.add(Implies(IC[53], D4[1] > D8[2]))
s.add(Implies(IC[54], D12[0] > D13[2]))
s.add(Implies(IC[55], D2[3] > D16[5]))
s.add(Implies(IC[56], D12[2] > D14[8]))
s.add(Implies(IC[57], D7[2] > D10[5]))
s.add(Implies(IC[58], D13[5] > D16[3]))
s.add(Implies(IC[59], D13[4] > D14[1]))
s.add(Implies(IC[60], D6[3] > D7[0]))
s.add(Implies(IC[61], D3[2] > D5[2]))
s.add(Implies(IC[62], D14[5] > D16[3]))
s.add(Implies(IC[63], D14[8] > D16[2]))
s.add(Implies(IC[64], D8[2] > D10[0]))
s.add(Implies(IC[65], D5[7] > D12[0]))
s.add(Implies(IC[66], D5[7] > D10[9]))
s.add(Implies(IC[67], D5[5] > D8[6]))
s.add(Implies(IC[68], D5[8] > D7[5]))
s.add(Implies(IC[69], D8[1] > D12[1]))
s.add(Implies(IC[70], D13[8] > D15[9]))
s.add(Implies(IC[71], D8[7] > D9[3]))
s.add(Implies(IC[72], D13[3] > D15[1]))
s.add(Implies(IC[73], D2[3] > D6[1]))
s.add(Implies(IC[74], D1[3] > D3[3]))
s.add(Implies(IC[75], D1[0] > D13[1]))
s.add(Implies(IC[76], D8[8] > D12[2]))
s.add(Implies(IC[77], D12[8] > D15[4]))
s.add(Implies(IC[78], D5[8] > D6[4]))
s.add(Implies(IC[79], D8[5] > D13[4]))
s.add(Implies(IC[80], D9[5] > D13[3]))
s.add(Implies(IC[81], D1[4] > D15[6]))
s.add(Implies(IC[82], D3[2] > D16[6]))
s.add(Implies(IC[83], D5[7] > D7[0]))
s.add(Implies(IC[84], D1[8] > D3[6]))
s.add(Implies(IC[85], D13[8] > D15[7]))
s.add(Implies(IC[86], D13[5] > D15[10]))
s.add(Implies(IC[87], D11[8] > D16[1]))
s.add(Implies(IC[88], D6[6] > D11[8]))
s.add(Implies(IC[89], D10[8] > D15[4]))
s.add(Implies(IC[90], D1[6] > D12[4]))
s.add(Implies(IC[91], D1[0] > D2[0]))
s.add(Implies(IC[92], D5[1] > D10[3]))
s.add(Implies(IC[93], D7[0] > D9[0]))
s.add(Implies(IC[94], D6[4] > D10[0]))
s.add(Implies(IC[95], D2[0] > D3[2]))
s.add(Implies(IC[96], D9[1] > D12[8]))
s.add(Implies(IC[97], D13[2] > D15[2]))
s.add(Implies(IC[98], D3[1] > D10[3]))
s.add(Implies(IC[99], D1[6] > D2[8]))
s.add(Implies(IC[100], D1[1] > D5[7]))
s.add(Implies(IC[101], D1[1] > D2[1]))
s.add(Implies(IC[102], D6[1] > D7[0]))
s.add(Implies(IC[103], D2[7] > D14[4]))
s.add(Implies(IC[104], D13[6] > D14[5]))
s.add(Implies(IC[105], D7[3] > D10[4]))
s.add(Implies(IC[106], D1[6] > D14[7]))
s.add(Implies(IC[107], D5[0] > D10[2]))
s.add(Implies(IC[108], D12[0] > D16[8]))
s.add(Implies(IC[109], D14[7] > D16[4]))
s.add(Implies(IC[110], D5[8] > D6[3]))
s.add(Implies(IC[111], D10[5] > D11[4]))
s.add(Implies(IC[112], D7[2] > D9[3]))
s.add(Implies(IC[113], D2[9] > D14[4]))
s.add(Implies(IC[114], D3[0] > D6[4]))
s.add(Implies(IC[115], D14[4] > D15[0]))
s.add(Implies(IC[116], D12[6] > D14[8]))
s.add(Implies(IC[117], D2[5] > D13[0]))
s.add(Implies(IC[118], D3[0] > D15[3]))
s.add(Implies(IC[119], D4[2] > D9[2]))
s.add(Implies(IC[120], D2[4] > D3[7]))
s.add(Implies(IC[121], D10[4] > D14[0]))
s.add(Implies(IC[122], D1[5] > D3[6]))
s.add(Implies(IC[123], D1[5] > D14[5]))
s.add(Implies(IC[124], D9[4] > D10[5]))
s.add(Implies(IC[125], D6[6] > D7[5]))
s.add(Implies(IC[126], D7[3] > D9[5]))
s.add(Implies(IC[127], D11[4] > D12[6]))
s.add(Implies(IC[128], D12[8] > D13[1]))
s.add(Implies(IC[129], D4[3] > D16[2]))
s.add(Implies(IC[130], D7[8] > D9[9]))
s.add(Implies(IC[131], D13[2] > D15[1]))
s.add(Implies(IC[132], D13[3] > D14[2]))
s.add(Implies(IC[133], D3[7] > D15[9]))
s.add(Implies(IC[134], D5[0] > D9[7]))
s.add(Implies(IC[135], D14[2] > D15[9]))
s.add(Implies(IC[136], D8[8] > D9[3]))
s.add(Implies(IC[137], D11[8] > D12[8]))
s.add(Implies(IC[138], D3[4] > D14[2]))
s.add(Implies(IC[139], D8[1] > D12[4]))
s.add(Implies(IC[140], D7[3] > D12[3]))
s.add(Implies(IC[141], D4[3] > D8[2]))
s.add(Implies(IC[142], D14[2] > D16[0]))
s.add(Implies(IC[143], D8[2] > D9[8]))
s.add(Implies(IC[144], D1[2] > D2[2]))
s.add(Implies(IC[145], D9[0] > D13[1]))
s.add(Implies(IC[146], D6[1] > D7[8]))
s.add(Implies(IC[147], D5[5] > D10[1]))
s.add(Implies(IC[148], D7[1] > D8[7]))
s.add(Implies(IC[149], D2[3] > D16[7]))
s.add(Implies(IC[150], D3[5] > D4[6]))
s.add(Implies(IC[151], D13[1] > D16[2]))
s.add(Implies(IC[152], D4[1] > D8[3]))
s.add(Implies(IC[153], D4[1] > D12[8]))
s.add(Implies(IC[154], D14[4] > D16[6]))
s.add(Implies(IC[155], D3[6] > D4[6]))
s.add(Implies(IC[156], D3[9] > D4[5]))
s.add(Implies(IC[157], D12[0] > D16[7]))
s.add(Implies(IC[158], D7[8] > D10[6]))
s.add(Implies(IC[159], D3[3] > D6[2]))
s.add(Implies(IC[160], D2[4] > D15[3]))
s.add(Implies(IC[161], D3[5] > D5[2]))
s.add(Implies(IC[162], D10[4] > D11[2]))
s.add(Implies(IC[163], D14[6] > D16[8]))
s.add(Implies(IC[164], D1[2] > D13[4]))
s.add(Implies(IC[165], D9[7] > D12[1]))
s.add(Implies(IC[166], D1[7] > D15[3]))
s.add(Implies(IC[167], D9[8] > D10[9]))
s.add(Implies(IC[168], D11[5] > D13[3]))
s.add(Implies(IC[169], D9[9] > D10[6]))
s.add(Implies(IC[170], D10[4] > D12[6]))
s.add(Implies(IC[171], D13[0] > D14[1]))
s.add(Implies(IC[172], D2[8] > D3[3]))
s.add(Implies(IC[173], D1[1] > D3[3]))
s.add(Implies(IC[174], D13[4] > D15[9]))
s.add(Implies(IC[175], D2[4] > D9[7]))
s.add(Implies(IC[176], D8[5] > D12[5]))
s.add(Implies(IC[177], D4[2] > D6[6]))
s.add(Implies(IC[178], D5[6] > D7[8]))
s.add(Implies(IC[179], D11[8] > D15[1]))
s.add(Implies(IC[180], D10[9] > D14[8]))
s.add(Implies(IC[181], D4[9] > D15[4]))
s.add(Implies(IC[182], D9[5] > D12[6]))
s.add(Implies(IC[183], D3[1] > D4[3]))
s.add(Implies(IC[184], D1[6] > D13[1]))
s.add(Implies(IC[185], D11[5] > D14[8]))
s.add(Implies(IC[186], D4[5] > D15[10]))
s.add(Implies(IC[187], D6[6] > D11[4]))
s.add(Implies(IC[188], D1[7] > D16[2]))
s.add(Implies(IC[189], D3[9] > D16[2]))
s.add(Implies(IC[190], D4[0] > D6[0]))
s.add(Implies(IC[191], D4[6] > D6[2]))
s.add(Implies(IC[192], D6[7] > D10[9]))
s.add(Implies(IC[193], D1[4] > D13[7]))
s.add(Implies(IC[194], D7[0] > D11[3]))
s.add(Implies(IC[195], D2[1] > D14[2]))
s.add(Implies(IC[196], D7[3] > D11[5]))
s.add(Implies(IC[197], D2[6] > D7[6]))
s.add(Implies(IC[198], D5[8] > D10[1]))
s.add(Implies(IC[199], D9[3] > D11[0]))
s.add(Implies(IC[200], D4[0] > D6[1]))
s.add(Implies(IC[201], D3[0] > D5[0]))
s.add(Implies(IC[202], D5[7] > D7[5]))
s.add(Implies(IC[203], D7[7] > D11[7]))
s.add(Implies(IC[204], D14[0] > D15[0]))
s.add(Implies(IC[205], D3[4] > D15[6]))
s.add(Implies(IC[206], D6[7] > D8[7]))
s.add(Implies(IC[207], D15[0] > D16[5]))
s.add(Implies(IC[208], D3[2] > D7[1]))
s.add(Implies(IC[209], D1[6] > D6[3]))
s.add(Implies(IC[210], D4[7] > D16[3]))
s.add(Implies(IC[211], D11[5] > D15[4]))
s.add(Implies(IC[212], D12[3] > D16[3]))
s.add(Implies(IC[213], D2[2] > D4[7]))
s.add(Implies(IC[214], D5[3] > D9[2]))
s.add(Implies(IC[215], D4[8] > D16[1]))
s.add(Implies(IC[216], D4[2] > D8[1]))
s.add(Implies(IC[217], D6[4] > D8[5]))
s.add(Implies(IC[218], D12[6] > D13[5]))
s.add(Implies(IC[219], D15[7] > D16[6]))
s.add(Implies(IC[220], D8[8] > D11[4]))
s.add(Implies(IC[221], D8[1] > D9[2]))
s.add(Implies(IC[222], D4[8] > D16[8]))
s.add(Implies(IC[223], D5[8] > D10[2]))
s.add(Implies(IC[224], D9[9] > D10[3]))
s.add(Implies(IC[225], D3[3] > D8[7]))
s.add(Implies(IC[226], D10[3] > D15[6]))
s.add(Implies(IC[227], D1[7] > D13[5]))
s.add(Implies(IC[228], D11[8] > D16[3]))
s.add(Implies(IC[229], D14[7] > D15[9]))
s.add(Implies(IC[230], D7[0] > D9[8]))
s.add(Implies(IC[231], D9[4] > D13[7]))
s.add(Implies(IC[232], D2[6] > D7[3]))
s.add(Implies(IC[233], D1[8] > D16[0]))
s.add(Implies(IC[234], D13[1] > D15[10]))
s.add(Implies(IC[235], D8[7] > D13[7]))
s.add(Implies(IC[236], D7[6] > D12[6]))
s.add(Implies(IC[237], D1[0] > D2[1]))
s.add(Implies(IC[238], D5[8] > D6[6]))
s.add(Implies(IC[239], D8[4] > D9[3]))
s.add(Implies(IC[240], D4[0] > D15[10]))
s.add(Implies(IC[241], D7[1] > D8[3]))
s.add(Implies(IC[242], D8[8] > D9[9]))
s.add(Implies(IC[243], D1[1] > D3[4]))
s.add(Implies(IC[244], D11[4] > D12[5]))
s.add(Implies(IC[245], D3[4] > D7[8]))
s.add(Implies(IC[246], D1[5] > D2[5]))
s.add(Implies(IC[247], D5[6] > D7[0]))
s.add(Implies(IC[248], D10[5] > D14[5]))
s.add(Implies(IC[249], D7[7] > D8[6]))
s.add(Implies(IC[250], D15[4] > D16[8]))
s.add(Implies(IC[251], D6[5] > D9[2]))
s.add(Implies(IC[252], D2[4] > D15[9]))
s.add(Implies(IC[253], D4[2] > D6[0]))
s.add(Implies(IC[254], D8[2] > D12[7]))
s.add(Implies(IC[255], D6[8] > D8[3]))
s.add(Implies(IC[256], D11[3] > D12[8]))
s.add(Implies(IC[257], D8[4] > D9[9]))
s.add(Implies(IC[258], D3[1] > D7[1]))
s.add(Implies(IC[259], D9[5] > D11[8]))
s.add(Implies(IC[260], D9[4] > D10[6]))
s.add(Implies(IC[261], D3[2] > D5[0]))
s.add(Implies(IC[262], D13[2] > D15[8]))
s.add(Implies(IC[263], D9[8] > D13[2]))
s.add(Implies(IC[264], D12[8] > D16[8]))
s.add(Implies(IC[265], D11[4] > D15[5]))
s.add(Implies(IC[266], D4[6] > D7[2]))
s.add(Implies(IC[267], D7[7] > D10[2]))
s.add(Implies(IC[268], D8[4] > D10[9]))
s.add(Implies(IC[269], D12[3] > D16[6]))
s.add(Implies(IC[270], D12[3] > D16[5]))
s.add(Implies(IC[271], D1[6] > D4[2]))
s.add(Implies(IC[272], D7[6] > D12[7]))
s.add(Implies(IC[273], D2[7] > D3[0]))
s.add(Implies(IC[274], D2[9] > D5[7]))
s.add(Implies(IC[275], D3[1] > D7[3]))
s.add(Implies(IC[276], D10[10] > D12[8]))
s.add(Implies(IC[277], D14[6] > D15[8]))
s.add(Implies(IC[278], D9[3] > D11[6]))
s.add(Implies(IC[279], D3[4] > D4[7]))
s.add(Implies(IC[280], D4[2] > D6[7]))
s.add(Implies(IC[281], D1[0] > D5[8]))
s.add(Implies(IC[282], D1[7] > D2[2]))
s.add(Implies(IC[283], D2[9] > D16[8]))
s.add(Implies(IC[284], D10[8] > D11[3]))
s.add(Implies(IC[285], D7[8] > D8[4]))
s.add(Implies(IC[286], D9[9] > D13[5]))
s.add(Implies(IC[287], D9[8] > D11[0]))
s.add(Implies(IC[288], D4[9] > D7[6]))
s.add(Implies(IC[289], D7[1] > D8[4]))
s.add(Implies(IC[290], D6[6] > D11[2]))
s.add(Implies(IC[291], D3[3] > D15[3]))
s.add(Implies(IC[292], D5[1] > D16[5]))
s.add(Implies(IC[293], D1[0] > D14[0]))
s.add(Implies(IC[294], D6[5] > D8[2]))
s.add(Implies(IC[295], D3[8] > D5[3]))
s.add(Implies(IC[296], D7[1] > D12[5]))
s.add(Implies(IC[297], D5[2] > D7[2]))
s.add(Implies(IC[298], D13[2] > D14[6]))
s.add(Implies(IC[299], D2[6] > D16[3]))
s.add(Implies(IC[300], D3[0] > D15[4]))
s.add(Implies(IC[301], D12[3] > D14[1]))
s.add(Implies(IC[302], D11[2] > D13[0]))
s.add(Implies(IC[303], D15[3] > D16[1]))
s.add(Implies(IC[304], D11[5] > D13[4]))
s.add(Implies(IC[305], D5[7] > D10[10]))
s.add(Implies(IC[306], D10[10] > D12[1]))
s.add(Implies(IC[307], D1[2] > D2[3]))
s.add(Implies(IC[308], D8[1] > D9[0]))
s.add(Implies(IC[309], D5[8] > D8[7]))
s.add(Implies(IC[310], D1[4] > D16[2]))
s.add(Implies(IC[311], D7[4] > D8[7]))
s.add(Implies(IC[312], D12[3] > D13[4]))
s.add(Implies(IC[313], D2[1] > D7[1]))
s.add(Implies(IC[314], D11[6] > D15[2]))
s.add(Implies(IC[315], D7[2] > D11[4]))
s.add(Implies(IC[316], D9[5] > D11[6]))
s.add(Implies(IC[317], D9[1] > D10[0]))
s.add(Implies(IC[318], D8[4] > D13[6]))
s.add(Implies(IC[319], D9[6] > D12[4]))
s.add(Implies(IC[320], D2[6] > D10[10]))
s.add(Implies(IC[321], D11[6] > D14[7]))
s.add(Implies(IC[322], D1[5] > D5[3]))
s.add(Implies(IC[323], D9[8] > D14[3]))
s.add(Implies(IC[324], D7[7] > D8[8]))
s.add(Implies(IC[325], D12[8] > D14[7]))
s.add(Implies(IC[326], D10[8] > D15[8]))
s.add(Implies(IC[327], D7[6] > D8[7]))
s.add(Implies(IC[328], D5[4] > D6[5]))
s.add(Implies(IC[329], D9[3] > D10[3]))
s.add(Implies(IC[330], D9[2] > D12[0]))
s.add(Implies(IC[331], D3[3] > D14[6]))
s.add(Implies(IC[332], D12[8] > D15[2]))
s.add(Implies(IC[333], D12[5] > D15[4]))
s.add(Implies(IC[334], D4[4] > D5[5]))
s.add(Implies(IC[335], D6[7] > D8[8]))
s.add(Implies(IC[336], D12[8] > D16[5]))
s.add(Implies(IC[337], D12[6] > D13[1]))
s.add(Implies(IC[338], D8[3] > D9[0]))
s.add(Implies(IC[339], D4[3] > D6[5]))
s.add(Implies(IC[340], D8[4] > D9[5]))
s.add(Implies(IC[341], D10[9] > D14[4]))
s.add(Implies(IC[342], D2[0] > D7[8]))
s.add(Implies(IC[343], D4[3] > D8[5]))
s.add(Implies(IC[344], D6[6] > D7[6]))
s.add(Implies(IC[345], D10[5] > D12[2]))
s.add(Implies(IC[346], D3[7] > D7[5]))
s.add(Implies(IC[347], D12[7] > D13[1]))
s.add(Implies(IC[348], D11[7] > D16[8]))
s.add(Implies(IC[349], D7[0] > D15[9]))
s.add(Implies(IC[350], D12[2] > D14[6]))
s.add(Implies(IC[351], D15[7] > D16[5]))
s.add(Implies(IC[352], D11[2] > D15[8]))
s.add(Implies(IC[353], D11[7] > D15[7]))
s.add(Implies(IC[354], D3[7] > D14[4]))
s.add(Implies(IC[355], D12[0] > D16[2]))
s.add(Implies(IC[356], D3[6] > D16[4]))
s.add(Implies(IC[357], D4[1] > D5[8]))
s.add(Implies(IC[358], D1[5] > D14[7]))
s.add(Implies(IC[359], D2[1] > D4[1]))
s.add(Implies(IC[360], D12[8] > D14[4]))
s.add(Implies(IC[361], D4[1] > D5[1]))
s.add(Implies(IC[362], D2[0] > D4[5]))
s.add(Implies(IC[363], D14[4] > D16[2]))
s.add(Implies(IC[364], D15[5] > D16[6]))
s.add(Implies(IC[365], D2[0] > D5[2]))
s.add(Implies(IC[366], D4[3] > D9[4]))
s.add(Implies(IC[367], D1[4] > D2[8]))
s.add(Implies(IC[368], D2[0] > D15[3]))
s.add(Implies(IC[369], D6[2] > D7[5]))
s.add(Implies(IC[370], D10[8] > D11[4]))
s.add(Implies(IC[371], D1[3] > D12[6]))
s.add(Implies(IC[372], D4[6] > D6[1]))
s.add(Implies(IC[373], D3[6] > D8[1]))
s.add(Implies(IC[374], D3[4] > D16[7]))
s.add(Implies(IC[375], D9[4] > D14[3]))
s.add(Implies(IC[376], D1[0] > D16[5]))
s.add(Implies(IC[377], D9[8] > D11[4]))
s.add(Implies(IC[378], D2[2] > D13[0]))
s.add(Implies(IC[379], D6[6] > D8[1]))
s.add(Implies(IC[380], D6[7] > D10[4]))
s.add(Implies(IC[381], D8[5] > D9[4]))
s.add(Implies(IC[382], D10[6] > D12[3]))
s.add(Implies(IC[383], D5[3] > D8[6]))
s.add(Implies(IC[384], D5[0] > D10[5]))
s.add(Implies(IC[385], D12[4] > D16[7]))
s.add(Implies(IC[386], D13[7] > D15[5]))
s.add(Implies(IC[387], D8[6] > D12[6]))
s.add(Implies(IC[388], D1[7] > D13[1]))
s.add(Implies(IC[389], D10[0] > D15[6]))
s.add(Implies(IC[390], D13[0] > D15[1]))
s.add(Implies(IC[391], D1[3] > D12[0]))
s.add(Implies(IC[392], D7[8] > D8[0]))
s.add(Implies(IC[393], D8[6] > D9[5]))
s.add(Implies(IC[394], D5[2] > D16[2]))
s.add(Implies(IC[395], D1[2] > D16[7]))
s.add(Implies(IC[396], D9[4] > D13[2]))
s.add(Implies(IC[397], D5[2] > D16[5]))
s.add(Implies(IC[398], D7[4] > D9[0]))
s.add(Implies(IC[399], D3[3] > D8[0]))
s.add(Implies(IC[400], D8[6] > D12[4]))
s.add(Implies(IC[401], D6[1] > D10[1]))
s.add(Implies(IC[402], D10[3] > D11[1]))
s.add(Implies(IC[403], D12[6] > D13[0]))
s.add(Implies(IC[404], D5[4] > D16[4]))
s.add(Implies(IC[405], D1[7] > D2[6]))
s.add(Implies(IC[406], D7[6] > D10[9]))
s.add(Implies(IC[407], D9[8] > D15[3]))
s.add(Implies(IC[408], D7[1] > D8[0]))
s.add(Implies(IC[409], D1[1] > D12[2]))
s.add(Implies(IC[410], D13[2] > D16[8]))
s.add(Implies(IC[411], D13[2] > D15[5]))
s.add(Implies(IC[412], D5[8] > D7[3]))
s.add(Implies(IC[413], D2[6] > D16[6]))
s.add(Implies(IC[414], D11[7] > D12[6]))
s.add(Implies(IC[415], D4[6] > D8[6]))
s.add(Implies(IC[416], D15[0] > D16[7]))
s.add(Implies(IC[417], D8[3] > D13[4]))
s.add(Implies(IC[418], D11[2] > D14[1]))
s.add(Implies(IC[419], D2[8] > D3[2]))
s.add(Implies(IC[420], D11[1] > D15[9]))
s.add(Implies(IC[421], D11[3] > D12[7]))
s.add(Implies(IC[422], D1[3] > D16[8]))
s.add(Implies(IC[423], D13[7] > D16[3]))
s.add(Implies(IC[424], D10[4] > D11[8]))
s.add(Implies(IC[425], D2[4] > D6[8]))
s.add(Implies(IC[426], D9[1] > D10[4]))
s.add(Implies(IC[427], D2[4] > D7[7]))
s.add(Implies(IC[428], D5[6] > D7[3]))
s.add(Implies(IC[429], D1[2] > D16[0]))
s.add(Implies(IC[430], D2[7] > D4[2]))
s.add(Implies(IC[431], D4[0] > D8[8]))
s.add(Implies(IC[432], D3[9] > D5[7]))
s.add(Implies(IC[433], D10[7] > D15[6]))
s.add(Implies(IC[434], D12[8] > D13[4]))
s.add(Implies(IC[435], D4[9] > D7[1]))
s.add(Implies(IC[436], D8[7] > D10[10]))
s.add(Implies(IC[437], D12[8] > D15[0]))
s.add(Implies(IC[438], D6[6] > D8[2]))
s.add(Implies(IC[439], D5[3] > D7[2]))
s.add(Implies(IC[440], D15[3] > D16[5]))
s.add(Implies(IC[441], D1[3] > D13[0]))
s.add(Implies(IC[442], D15[7] > D16[0]))
s.add(Implies(IC[443], D4[5] > D9[5]))
s.add(Implies(IC[444], D10[1] > D12[5]))
s.add(Implies(IC[445], D2[7] > D8[7]))
s.add(Implies(IC[446], D1[8] > D16[2]))
s.add(Implies(IC[447], D14[8] > D16[1]))
s.add(Implies(IC[448], D11[8] > D15[9]))
s.add(Implies(IC[449], D2[2] > D13[3]))
s.add(Implies(IC[450], D7[8] > D8[3]))
s.add(Implies(IC[451], D7[6] > D11[4]))
s.add(Implies(IC[452], D2[7] > D15[0]))
s.add(Implies(IC[453], D5[5] > D9[0]))
s.add(Implies(IC[454], D2[4] > D16[2]))
s.add(Implies(IC[455], D4[7] > D13[8]))
s.add(Implies(IC[456], D13[1] > D15[5]))
s.add(Implies(IC[457], D7[3] > D9[6]))
s.add(Implies(IC[458], D2[2] > D16[5]))
s.add(Implies(IC[459], D4[8] > D16[7]))
s.add(Implies(IC[460], D3[0] > D4[3]))
s.add(Implies(IC[461], D6[1] > D7[4]))
s.add(Implies(IC[462], D1[4] > D12[2]))
s.add(Implies(IC[463], D2[7] > D13[8]))
s.add(Implies(IC[464], D4[0] > D7[7]))
s.add(Implies(IC[465], D3[1] > D15[7]))
s.add(Implies(IC[466], D2[8] > D3[0]))
s.add(Implies(IC[467], D10[0] > D11[1]))
s.add(Implies(IC[468], D1[1] > D13[8]))
s.add(Implies(IC[469], D6[3] > D8[3]))
s.add(Implies(IC[470], D2[2] > D4[6]))
s.add(Implies(IC[471], D5[5] > D7[6]))
s.add(Implies(IC[472], D13[5] > D15[0]))
s.add(Implies(IC[473], D1[8] > D13[8]))
s.add(Implies(IC[474], D9[0] > D12[2]))
s.add(Implies(IC[475], D6[7] > D9[2]))
s.add(Implies(IC[476], D13[8] > D15[1]))
s.add(Implies(IC[477], D1[0] > D16[3]))
s.add(Implies(IC[478], D1[8] > D15[7]))
s.add(Implies(IC[479], D3[3] > D7[1]))
s.add(Implies(IC[480], D2[1] > D6[3]))
s.add(Implies(IC[481], D6[8] > D9[6]))
s.add(Implies(IC[482], D8[0] > D9[8]))
s.add(Implies(IC[483], D10[6] > D11[1]))
s.add(Implies(IC[484], D1[6] > D13[4]))
s.add(Implies(IC[485], D14[1] > D16[1]))
s.add(Implies(IC[486], D4[2] > D16[8]))
s.add(Implies(IC[487], D4[3] > D16[3]))
s.add(Implies(IC[488], D4[6] > D15[9]))
s.add(Implies(IC[489], D11[5] > D16[7]))
s.add(Implies(IC[490], D12[7] > D14[0]))
s.add(Implies(IC[491], D1[3] > D13[7]))
s.add(Implies(IC[492], D13[8] > D14[4]))
s.add(Implies(IC[493], D4[0] > D8[8]))
s.add(Implies(IC[494], D9[7] > D10[8]))
s.add(Implies(IC[495], D5[5] > D8[5]))
s.add(Implies(IC[496], D15[3] > D16[1]))
s.add(Implies(IC[497], D6[8] > D7[5]))
s.add(Implies(IC[498], D2[4] > D14[5]))
s.add(Implies(IC[499], D9[0] > D12[3]))
s.add(Implies(IC[500], D13[3] > D16[0]))
s.add(Implies(IC[501], D14[5] > D16[8]))
s.add(Implies(IC[502], D11[2] > D16[8]))
s.add(Implies(IC[503], D7[4] > D12[6]))
s.add(Implies(IC[504], D9[6] > D14[8]))
s.add(Implies(IC[505], D3[8] > D16[7]))
s.add(Implies(IC[506], D1[3] > D4[9]))
s.add(Implies(IC[507], D1[0] > D5[2]))
s.add(Implies(IC[508], D10[10] > D13[8]))
s.add(Implies(IC[509], D8[6] > D12[8]))
s.add(Implies(IC[510], D7[1] > D8[7]))
s.add(Implies(IC[511], D2[9] > D13[1]))
s.add(Implies(IC[512], D11[6] > D12[6]))
s.add(Implies(IC[513], D1[7] > D15[2]))
s.add(Implies(IC[514], D3[4] > D16[2]))
s.add(Implies(IC[515], D6[0] > D7[3]))
s.add(Implies(IC[516], D1[7] > D16[7]))
s.add(Implies(IC[517], D14[4] > D15[3]))
s.add(Implies(IC[518], D10[6] > D13[1]))
s.add(Implies(IC[519], D14[0] > D15[0]))
s.add(Implies(IC[520], D11[4] > D15[4]))
s.add(Implies(IC[521], D14[0] > D15[7]))
s.add(Implies(IC[522], D11[0] > D16[2]))
s.add(Implies(IC[523], D4[6] > D5[3]))
s.add(Implies(IC[524], D3[9] > D14[1]))
s.add(Implies(IC[525], D8[6] > D9[6]))
s.add(Implies(IC[526], D4[1] > D5[5]))
s.add(Implies(IC[527], D4[0] > D6[4]))
s.add(Implies(IC[528], D4[3] > D6[7]))
s.add(Implies(IC[529], D14[5] > D16[7]))
s.add(Implies(IC[530], D7[1] > D10[8]))
s.add(Implies(IC[531], D6[5] > D11[7]))
s.add(Implies(IC[532], D1[1] > D13[6]))
s.add(Implies(IC[533], D5[5] > D6[5]))
s.add(Implies(IC[534], D9[9] > D13[0]))
s.add(Implies(IC[535], D1[5] > D4[7]))
s.add(Implies(IC[536], D3[2] > D15[9]))
s.add(Implies(IC[537], D2[9] > D4[2]))
s.add(Implies(IC[538], D3[4] > D4[1]))
s.add(Implies(IC[539], D2[9] > D7[7]))
s.add(Implies(IC[540], D3[7] > D14[0]))
s.add(Implies(IC[541], D3[3] > D7[2]))
s.add(Implies(IC[542], D14[5] > D15[3]))
s.add(Implies(IC[543], D6[5] > D9[8]))
s.add(Implies(IC[544], D2[2] > D16[3]))
s.add(Implies(IC[545], D8[4] > D9[9]))
s.add(Implies(IC[546], D1[4] > D13[3]))
s.add(Implies(IC[547], D5[7] > D16[7]))
s.add(Implies(IC[548], D14[6] > D16[4]))
s.add(Implies(IC[549], D10[0] > D13[3]))
s.add(Implies(IC[550], D7[2] > D11[7]))
s.add(Implies(IC[551], D3[0] > D4[5]))
s.add(Implies(IC[552], D8[3] > D10[4]))
s.add(Implies(IC[553], D1[2] > D2[8]))
s.add(Implies(IC[554], D11[7] > D12[4]))
s.add(Implies(IC[555], D6[7] > D7[0]))
s.add(Implies(IC[556], D9[9] > D10[6]))
s.add(Implies(IC[557], D12[3] > D14[0]))
s.add(Implies(IC[558], D13[2] > D14[4]))
s.add(Implies(IC[559], D2[3] > D3[2]))
s.add(Implies(IC[560], D1[2] > D3[1]))
s.add(Implies(IC[561], D8[1] > D9[3]))
s.add(Implies(IC[562], D3[9] > D4[8]))
s.add(Implies(IC[563], D9[1] > D12[0]))
s.add(Implies(IC[564], D3[2] > D16[0]))
s.add(Implies(IC[565], D1[1] > D3[3]))
s.add(Implies(IC[566], D6[5] > D8[8]))
s.add(Implies(IC[567], D14[8] > D15[6]))
s.add(Implies(IC[568], D3[5] > D5[7]))
s.add(Implies(IC[569], D1[3] > D3[0]))
s.add(Implies(IC[570], D11[6] > D15[2]))
s.add(Implies(IC[571], D2[1] > D4[1]))
s.add(Implies(IC[572], D3[5] > D4[7]))
s.add(Implies(IC[573], D10[7] > D15[7]))
s.add(Implies(IC[574], D1[5] > D14[2]))
s.add(Implies(IC[575], D10[7] > D12[6]))
s.add(Implies(IC[576], D10[4] > D13[0]))
s.add(Implies(IC[577], D6[3] > D8[3]))
s.add(Implies(IC[578], D3[7] > D7[7]))
s.add(Implies(IC[579], D13[2] > D15[5]))
s.add(Implies(IC[580], D5[1] > D7[8]))
s.add(Implies(IC[581], D10[5] > D12[2]))
s.add(Implies(IC[582], D4[7] > D9[8]))
s.add(Implies(IC[583], D11[3] > D13[6]))
s.add(Implies(IC[584], D11[2] > D16[5]))
s.add(Implies(IC[585], D7[6] > D11[8]))
s.add(Implies(IC[586], D14[0] > D16[4]))
s.add(Implies(IC[587], D1[6] > D2[7]))
s.add(Implies(IC[588], D2[9] > D4[7]))
s.add(Implies(IC[589], D12[1] > D15[2]))
s.add(Implies(IC[590], D5[1] > D6[6]))
s.add(Implies(IC[591], D3[4] > D4[0]))
s.add(Implies(IC[592], D1[4] > D3[7]))
s.add(Implies(IC[593], D1[4] > D3[2]))
s.add(Implies(IC[594], D8[3] > D12[7]))
s.add(Implies(IC[595], D3[9] > D15[5]))
s.add(Implies(IC[596], D9[8] > D10[10]))
s.add(Implies(IC[597], D9[9] > D13[4]))
s.add(Implies(IC[598], D3[6] > D5[3]))
s.add(Implies(IC[599], D2[7] > D3[6]))
s.add(Implies(IC[600], D6[4] > D7[2]))
s.add(Implies(IC[601], D5[3] > D9[0]))
s.add(Implies(IC[602], D15[10] > D16[5]))
s.add(Implies(IC[603], D13[6] > D15[8]))
s.add(Implies(IC[604], D3[4] > D7[1]))
s.add(Implies(IC[605], D6[0] > D7[0]))
s.add(Implies(IC[606], D5[6] > D16[1]))
s.add(Implies(IC[607], D4[6] > D8[1]))
s.add(Implies(IC[608], D13[5] > D15[9]))
s.add(Implies(IC[609], D1[8] > D5[1]))
s.add(Implies(IC[610], D4[6] > D8[3]))
s.add(Implies(IC[611], D5[7] > D7[4]))
s.add(Implies(IC[612], D7[6] > D12[5]))
s.add(Implies(IC[613], D6[8] > D7[3]))
s.add(Implies(IC[614], D5[6] > D8[6]))
s.add(Implies(IC[615], D5[7] > D16[3]))
s.add(Implies(IC[616], D3[4] > D14[8]))
s.add(Implies(IC[617], D3[8] > D7[4]))
s.add(Implies(IC[618], D1[7] > D16[6]))
s.add(Implies(IC[619], D2[7] > D5[2]))
s.add(Implies(IC[620], D1[0] > D3[0]))
s.add(Implies(IC[621], D3[0] > D6[7]))
s.add(Implies(IC[622], D3[8] > D4[3]))
s.add(Implies(IC[623], D10[0] > D12[2]))
s.add(Implies(IC[624], D4[9] > D16[8]))
s.add(Implies(IC[625], D9[7] > D13[3]))
s.add(Implies(IC[626], D2[3] > D5[0]))
s.add(Implies(IC[627], D4[1] > D5[7]))
s.add(Implies(IC[628], D1[5] > D4[8]))
s.add(Implies(IC[629], D4[7] > D16[8]))
s.add(Implies(IC[630], D3[2] > D4[8]))
s.add(Implies(IC[631], D3[7] > D16[0]))
s.add(Implies(IC[632], D12[6] > D16[4]))
s.add(Implies(IC[633], D9[6] > D14[1]))
s.add(Implies(IC[634], D7[7] > D9[1]))
s.add(Implies(IC[635], D4[4] > D5[6]))
s.add(Implies(IC[636], D2[1] > D3[6]))
s.add(Implies(IC[637], D1[6] > D13[6]))
s.add(Implies(IC[638], D10[7] > D11[7]))
s.add(Implies(IC[639], D9[4] > D10[6]))
s.add(Implies(IC[640], D4[5] > D5[8]))
s.add(Implies(IC[641], D1[7] > D4[7]))
s.add(Implies(IC[642], D4[1] > D5[6]))
s.add(Implies(IC[643], D11[2] > D13[7]))
s.add(Implies(IC[644], D12[2] > D13[8]))
s.add(Implies(IC[645], D9[1] > D13[6]))
s.add(Implies(IC[646], D11[0] > D13[0]))
s.add(Implies(IC[647], D1[1] > D16[2]))
s.add(Implies(IC[648], D1[3] > D6[5]))
s.add(Implies(IC[649], D1[3] > D5[5]))
s.add(Implies(IC[650], D3[1] > D6[8]))
s.add(Implies(IC[651], D8[0] > D9[0]))
s.add(Implies(IC[652], D7[3] > D9[4]))
s.add(Implies(IC[653], D1[8] > D13[5]))
s.add(Implies(IC[654], D14[6] > D16[1]))
s.add(Implies(IC[655], D10[6] > D12[2]))
s.add(Implies(IC[656], D4[9] > D6[1]))
s.add(Implies(IC[657], D4[5] > D16[4]))
s.add(Implies(IC[658], D10[7] > D15[2]))
s.add(Implies(IC[659], D6[8] > D9[7]))
s.add(Implies(IC[660], D3[7] > D15[0]))
s.add(Implies(IC[661], D3[0] > D4[2]))
s.add(Implies(IC[662], D11[3] > D13[7]))
s.add(Implies(IC[663], D13[1] > D14[5]))
s.add(Implies(IC[664], D4[4] > D7[2]))
s.add(Implies(IC[665], D12[4] > D13[0]))
s.add(Implies(IC[666], D2[7] > D10[1]))
s.add(Implies(IC[667], D9[4] > D13[0]))
s.add(Implies(IC[668], D11[7] > D15[6]))
s.add(Implies(IC[669], D4[3] > D7[0]))
s.add(Implies(IC[670], D4[4] > D6[6]))
s.add(Implies(IC[671], D7[8] > D9[2]))
s.add(Implies(IC[672], D3[3] > D14[5]))
s.add(Implies(IC[673], D1[3] > D16[0]))
s.add(Implies(IC[674], D12[7] > D13[4]))
s.add(Implies(IC[675], D11[5] > D14[5]))
s.add(Implies(IC[676], D14[2] > D16[6]))
s.add(Implies(IC[677], D4[3] > D5[1]))
s.add(Implies(IC[678], D4[8] > D11[6]))
s.add(Implies(IC[679], D12[8] > D16[7]))
s.add(Implies(IC[680], D10[6] > D15[5]))
s.add(Implies(IC[681], D6[5] > D10[5]))
s.add(Implies(IC[682], D4[9] > D5[5]))
s.add(Implies(IC[683], D1[0] > D12[5]))
s.add(Implies(IC[684], D11[6] > D12[4]))
s.add(Implies(IC[685], D14[4] > D15[10]))
s.add(Implies(IC[686], D12[6] > D13[4]))
s.add(Implies(IC[687], D6[7] > D10[2]))
s.add(Implies(IC[688], D10[3] > D13[5]))
s.add(Implies(IC[689], D14[3] > D16[3]))
s.add(Implies(IC[690], D7[4] > D9[5]))
s.add(Implies(IC[691], D3[4] > D14[4]))
s.add(Implies(IC[692], D1[4] > D2[5]))
s.add(Implies(IC[693], D8[3] > D10[10]))
s.add(Implies(IC[694], D8[8] > D9[7]))
s.add(Implies(IC[695], D10[6] > D15[8]))
s.add(Implies(IC[696], D11[4] > D16[7]))
s.add(Implies(IC[697], D3[5] > D15[10]))
s.add(Implies(IC[698], D13[2] > D14[2]))
s.add(Implies(IC[699], D1[2] > D13[3]))
s.add(Implies(IC[700], D3[7] > D15[3]))
s.add(Implies(IC[701], D1[7] > D6[5]))
s.add(Implies(IC[702], D12[8] > D15[6]))
s.add(Implies(IC[703], D3[7] > D16[5]))
s.add(Implies(IC[704], D6[4] > D7[6]))
s.add(Implies(IC[705], D12[1] > D14[5]))
s.add(Implies(IC[706], D10[7] > D14[7]))
s.add(Implies(IC[707], D10[3] > D12[0]))
s.add(Implies(IC[708], D1[6] > D4[9]))
s.add(Implies(IC[709], D10[10] > D12[3]))
s.add(Implies(IC[710], D9[4] > D11[6]))
s.add(Implies(IC[711], D11[6] > D12[2]))
s.add(Implies(IC[712], D8[1] > D9[2]))
s.add(Implies(IC[713], D1[7] > D8[0]))
s.add(Implies(IC[714], D3[1] > D5[7]))
s.add(Implies(IC[715], D9[6] > D10[6]))
s.add(Implies(IC[716], D11[2] > D12[0]))
s.add(Implies(IC[717], D1[4] > D13[2]))
s.add(Implies(IC[718], D1[6] > D2[8]))
s.add(Implies(IC[719], D2[0] > D4[2]))
s.add(Implies(IC[720], D12[7] > D13[6]))
s.add(Implies(IC[721], D5[0] > D7[2]))
s.add(Implies(IC[722], D1[6] > D3[9]))
s.add(Implies(IC[723], D3[2] > D4[4]))
s.add(Implies(IC[724], D5[2] > D16[2]))
s.add(Implies(IC[725], D4[9] > D16[5]))
s.add(Implies(IC[726], D6[1] > D11[2]))
s.add(Implies(IC[727], D7[6] > D12[3]))
s.add(Implies(IC[728], D9[0] > D14[6]))
s.add(Implies(IC[729], D9[6] > D10[9]))
s.add(Implies(IC[730], D1[3] > D4[2]))
s.add(Implies(IC[731], D6[0] > D8[7]))
s.add(Implies(IC[732], D3[9] > D16[4]))
s.add(Implies(IC[733], D5[7] > D6[8]))
s.add(Implies(IC[734], D5[6] > D10[4]))
s.add(Implies(IC[735], D7[6] > D8[1]))
s.add(Implies(IC[736], D5[5] > D9[5]))
s.add(Implies(IC[737], D1[4] > D6[4]))
s.add(Implies(IC[738], D5[3] > D7[7]))
s.add(Implies(IC[739], D2[6] > D16[5]))
s.add(Implies(IC[740], D2[0] > D3[0]))
s.add(Implies(IC[741], D3[9] > D15[9]))
s.add(Implies(IC[742], D1[5] > D14[0]))
s.add(Implies(IC[743], D11[1] > D12[6]))
s.add(Implies(IC[744], D13[1] > D15[9]))
s.add(Implies(IC[745], D1[4] > D4[2]))
s.add(Implies(IC[746], D12[1] > D16[7]))
s.add(Implies(IC[747], D6[0] > D7[7]))
s.add(Implies(IC[748], D3[6] > D7[4]))
s.add(Implies(IC[749], D14[6] > D15[7]))
s.add(Implies(IC[750], D4[0] > D5[3]))
s.add(Implies(IC[751], D10[0] > D12[7]))
s.add(Implies(IC[752], D4[4] > D15[3]))
s.add(Implies(IC[753], D6[4] > D10[4]))
s.add(Implies(IC[754], D9[0] > D13[8]))
s.add(Implies(IC[755], D6[8] > D8[7]))
s.add(Implies(IC[756], D2[6] > D7[1]))
s.add(Implies(IC[757], D3[6] > D8[1]))
s.add(Implies(IC[758], D3[0] > D16[4]))
s.add(Implies(IC[759], D1[7] > D3[3]))
s.add(Implies(IC[760], D4[1] > D5[8]))

##End Java insert


# Check if a solution exisits to this problem
isSat = s.check(DC+IC)
if isSat == sat:
	print 'Solution is SAT'
	m = s.model()
	total = getDistance(m)
	print 'Optimizing Solution'
	getOptimizedSolution(s,total)
elif isSat == unsat:
	print 'UnSAT Scenario: relaxing constraints'
	print 'Initial DC: %s'% len(DC);
	print 'Initial IC: %s'% len(IC);
	relaxConstraints(s,DC,IC)
	print 'Final DC: %s'% len(DC);
	print 'Final IC: %s'% len(IC);
	
	m = s.model()
	total = getDistance(m)
	getOptimizedSolution(s,total)
else:
	print 'unknown'		
